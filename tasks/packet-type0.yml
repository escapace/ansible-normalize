---

- name: add screen group
  group:
    name: screen
    state: present
    system: yes

- name: disable services
  service:
    name: "{{ item }}"
    enabled: no
    masked: yes
  with_items:
    - NetworkManager
    - NetworkManager-wait-online
    - cloud-config
    - cloud-final
    - cloud-init
    - cloud-init-local
    - kdump
    - rhel-import-state
    - rhel-readonly
    - wpa_supplicant
  register: normalize_services

- name: install dependencies
  action: "{{ ansible_pkg_mgr }} name={{ item }} state=present"
  with_items:
    - e2fsprogs
    - parted
    - gdisk
    - util-linux
    - dracut

- name: explicitly order dracut-pre-mount.service before systemd-fsck-root.service
  lineinfile:
    dest: "{{ item }}"
    regexp: '^Before='
    line: 'Before=initrd-root-fs.target sysroot.mount systemd-fsck-root.service'
  with_items:
    - "/usr/lib/dracut/modules.d/98systemd/dracut-pre-mount.service"

- name: create dracut module directory
  file:
    path: /usr/lib/dracut/modules.d/90resize-root
    state: directory
    mode: 0755
    owner: root
    group: root

- name: copy dracut module
  copy:
    src: "{{ item }}"
    dest: /usr/lib/dracut/modules.d/90resize-root/
    owner: root
    group: root
    mode: 0770
  with_fileglob:
    - files/90resize-root/*
  register: normalize_resize_root_module

- name: copy dracut module script
  template:
    src: templates/resize-root.j2
    dest: /usr/sbin/resize-root
    owner: root
    group: root
    mode: 0755
  register: normalize_resize_root_script

- name: generate an initramfs image
  # "usr/src/kernels/$(rpm -qa kernel |sort -V |tail -n 1| sed -e 's/^kernel-//')"
  shell: >
    dracut -H -f /boot/initramfs-resize-root
  when: normalize_resize_root_script.changed or normalize_resize_root_module.changed
  register: normalize_initramfs

- name: update grub.cfg with new initramfs
  replace:
    dest: /boot/grub/grub.cfg
    regexp: '^[\t ]+initrd[\t ]+/boot/init.*$'
    replace: 'initrd /boot/initramfs-resize-root'
  when: normalize_initramfs.changed

- name: remove /forcefsck
  file:
    path: /forcefsck
    state: absent
  when: normalize_initramfs.changed

- name: remove /.autofsck
  file:
    path: /.autofsck
    state: absent
  when: normalize_initramfs.changed

- name: touch /fastboot
  file:
    path: /fastboot
    state: touch
    owner: root
  when: normalize_initramfs.changed
  notify:
  - normalize remove fastboot

- name: disable fsck in /etc/fstab
  replace:
    dest: /etc/fstab
    regexp: '(^.*)([1]+[\t ]*)$'
    replace: '\1 0'
    backup: yes
  when: normalize_initramfs.changed
  notify:
  - normalize enable fstab check

- name: update grub.cfg with skipfsck
  replace:
    dest: /boot/grub/grub.cfg
    regexp: '(^[\t ]+linux[\t ]+/boot/vmlinuz[\t ]+)((?![ ]*rd\.skipfsck).*)$'
    replace: '\1 rd.skipfsck \2'
    backup: yes
  when: normalize_initramfs.changed
  notify:
  - normalize remove skipfsck

- name: reboot is needed
  notify:
  - normalize reboot needed
  when: normalize_initramfs.changed or normalize_services.changed
